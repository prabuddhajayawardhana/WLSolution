// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WLSolution.Infrastructure.Persistence;

#nullable disable

namespace WLSolution.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240909152711_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WLSolution.Domain.Entities.CategoryAveragePrice", b =>
                {
                    b.Property<decimal>("AveragePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("WLSolution.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("f03dae1e-2f1c-4eb9-bc23-86724df04e0c"),
                            Category = "Electronics",
                            Name = "Product A",
                            Price = 299.99m,
                            Stock = 50
                        },
                        new
                        {
                            ProductId = new Guid("0d3df80f-bd4e-4111-8be5-ee7884392b00"),
                            Category = "Electronics",
                            Name = "Product B",
                            Price = 199.99m,
                            Stock = 30
                        },
                        new
                        {
                            ProductId = new Guid("69c911b6-a393-44c6-83a0-da3f99608d87"),
                            Category = "Clothing",
                            Name = "Product C",
                            Price = 49.99m,
                            Stock = 100
                        },
                        new
                        {
                            ProductId = new Guid("ee43749a-c0f4-4df2-8658-e7c6b47f01ed"),
                            Category = "Clothing",
                            Name = "Product D",
                            Price = 79.99m,
                            Stock = 80
                        },
                        new
                        {
                            ProductId = new Guid("ba3f1b53-3107-47bd-9ce6-10d71653fba0"),
                            Category = "Furniture",
                            Name = "Product E",
                            Price = 399.99m,
                            Stock = 20
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
