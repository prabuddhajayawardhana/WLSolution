// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WLSolution.Infrastructure.Persistence;

#nullable disable

namespace WLSolution.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240909152721_AddStoredProcedures")]
    partial class AddStoredProcedures
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WLSolution.Domain.Entities.CategoryAveragePrice", b =>
                {
                    b.Property<decimal>("AveragePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView(null, (string)null);
                });

            modelBuilder.Entity("WLSolution.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = new Guid("5b9ae4b9-2a0e-47aa-ad54-d316239052dc"),
                            Category = "Electronics",
                            Name = "Product A",
                            Price = 299.99m,
                            Stock = 50
                        },
                        new
                        {
                            ProductId = new Guid("c5427011-7d32-4667-9e7a-d6c5781f9b42"),
                            Category = "Electronics",
                            Name = "Product B",
                            Price = 199.99m,
                            Stock = 30
                        },
                        new
                        {
                            ProductId = new Guid("6ac63dfe-b4a2-4530-bed7-aa7fadbdf414"),
                            Category = "Clothing",
                            Name = "Product C",
                            Price = 49.99m,
                            Stock = 100
                        },
                        new
                        {
                            ProductId = new Guid("4101da28-fe0e-4699-98d6-62aef2510be9"),
                            Category = "Clothing",
                            Name = "Product D",
                            Price = 79.99m,
                            Stock = 80
                        },
                        new
                        {
                            ProductId = new Guid("ed517c49-37aa-4321-a185-89988bc6dc17"),
                            Category = "Furniture",
                            Name = "Product E",
                            Price = 399.99m,
                            Stock = 20
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
